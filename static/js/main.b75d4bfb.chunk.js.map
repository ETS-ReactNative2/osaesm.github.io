{"version":3,"sources":["registerServiceWorker.js","Home.js","Projects.js","Routes.js","Website.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","Home","Jumbotron","fluid","Container","className","alt","src","Component","Projects","Card","CardImg","top","width","CardBody","CardTitle","CardSubtitle","CardText","Button","target","href","Routes","props","toggle","bind","isOpen","this","setState","Navbar","color","dark","expand","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","exact","path","component","Website","email","rel","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"+RAUMA,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,M,yFChDlDC,G,kKA1Bb,WACE,OACE,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,EAAA,EAAD,CAAWD,OAAK,EAACE,UAAU,qBACzB,wBAAIA,UAAU,aAAd,gBACA,gCACE,yBAAKA,UAAU,aAAaC,IAAI,mCAAmCC,IAAI,YAEzE,yBAAKF,UAAU,QAAf,6FAGA,yBAAKA,UAAU,QAAf,uFAGA,yBAAKA,UAAU,QAAf,0KAGA,yBAAKA,UAAU,QAAf,gI,GAlBSG,c,gECsCJC,E,4JAlCb,WACE,OACE,yBAAKJ,UAAU,mBACb,kBAACK,EAAA,EAAD,CAAML,UAAU,YACd,kBAACM,EAAA,EAAD,CAASC,KAAG,EAACC,MAAM,OAAON,IAAI,wBAAwBD,IAAI,sBAC1D,kBAACQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,mBACA,kBAACC,EAAA,EAAD,sDACA,kBAACC,EAAA,EAAD,6BACA,kBAACC,EAAA,EAAD,8CAGJ,kBAACR,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,KAAG,EAACC,MAAM,OAAON,IAAI,SAASD,IAAI,mBAC3C,kBAACQ,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,qBACE,kBAACC,EAAA,EAAD,2BACA,kBAACE,EAAA,EAAD,CAAQC,OAAO,SAASC,KAAK,8CAA7B,gBAGJ,kBAACV,EAAA,EAAD,CAAML,UAAU,aACd,kBAACM,EAAA,EAAD,CAASC,KAAG,EAACC,MAAM,OAAON,IAAI,kBAAkBD,IAAI,mBACpD,kBAACQ,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,gCACE,kBAACC,EAAA,EAAD,iGACA,kBAACC,EAAA,EAAD,iDACA,kBAACC,EAAA,EAAD,CAAQC,OAAO,SAASC,KAAK,mCAA7B,qB,GA3BWZ,a,wDCgDRa,E,kDAvCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,OAAS,EAAKA,OAAOC,KAAZ,gBACd,EAAK7B,MAAQ,CACX8B,QAAQ,GALO,E,0CAQnB,WACEC,KAAKC,SAAS,CACZF,QAASC,KAAK/B,MAAM8B,W,oBAGxB,WACE,OACE,kBAAC,IAAD,KACE,6BACE,kBAACG,EAAA,EAAD,CAAQC,MAAM,OAAOC,MAAI,EAACC,OAAO,MAC/B,kBAACC,EAAA,EAAD,CAAaZ,KAAK,KAAlB,gBACA,kBAACa,EAAA,EAAD,CAAeC,QAASR,KAAKH,SAC7B,kBAACY,EAAA,EAAD,CAAUV,OAAQC,KAAK/B,MAAM8B,OAAQW,QAAM,GACzC,kBAACC,EAAA,EAAD,CAAKhC,UAAU,UAAU+B,QAAM,GAC7B,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASnB,KAAK,cAAd,WAEF,kBAACkB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASnB,KAAK,eAAd,gBAKR,kBAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,IAAIC,UAAWzC,IACjC,kBAAC,IAAD,CAAOwC,KAAK,YAAYC,UAAWjC,U,GAjCxBD,aCeNmC,G,kKAzBb,WACE,IAAMC,EAAQ,2BAGd,OACE,6BACE,yBAAKvC,UAAU,QACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,UACb,yBAAKA,UAAU,cACb,2CAAwB,uBAAGe,KAAI,iBAAYwB,IAAUA,GACrD,8CAA2B,uBAAGxB,KAAK,oBAVvB,kBAWZ,wDAAqC,uBAAGA,KAAK,kCAAkCD,OAAO,SAAS0B,IAAI,uBAVpF,iDAYjB,yBAAKxC,UAAU,eACb,8CAA2B,uBAAGe,KAAM,8CAA+CD,OAAO,SAAS0B,IAAI,uBAA5E,sBAC3B,+CAA4B,uBAAGzB,KAAM,2BAA4BD,OAAO,SAAS0B,IAAI,uBAAzD,kB,GAlBlBrC,cCEtBsC,IAASC,OAAO,kBAAC,EAAD,MAAaC,SAASC,eAAe,SLctC,WACb,GAA6C,kBAAmB/D,UAAW,CAGzE,GADkB,IAAIgE,IAAIC,GAAwBvE,OAAOC,UAC3CuE,SAAWxE,OAAOC,SAASuE,OAIvC,OAGFxE,OAAOyE,iBAAiB,QAAQ,WAC9B,IAAMpE,EAAK,UAAMkE,GAAN,sBAEPzE,IAiDV,SAAiCO,GAE/BqE,MAAMrE,GACHI,MAAK,SAAAkE,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CzE,UAAUC,cAAcyE,MAAMvE,MAAK,SAAAC,GACjCA,EAAauE,aAAaxE,MAAK,WAC7BT,OAAOC,SAASiF,eAKpB9E,EAAgBC,MAGnBc,OAAM,WACLF,QAAQC,IACN,oEArEAiE,CAAwB9E,GAIxBC,UAAUC,cAAcyE,MAAMvE,MAAK,WACjCQ,QAAQC,IACN,gHAMJd,EAAgBC,OKzCxB+E,K","file":"static/js/main.b75d4bfb.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { Jumbotron, Container } from 'reactstrap';\nimport './Home.css'\n\nclass Home extends Component {\n  render() {\n    return (\n      <Jumbotron fluid>\n        <Container fluid className='center-everything'>\n          <h1 className=\"display-3\">Osama Esmail</h1>\n          <figure>\n            <img className='circle-pic' alt='Me in front of a blossoming tree' src='Me.jpg' />\n          </figure>\n          <div className=\"lead\">\n            I'm a senior at the University of Illinois at Urbana-Champaign studying computer science.\n          </div>\n          <div className=\"lead\">\n            I also study math as a second major and keep tabs on new, interesting technologies.\n          </div>\n          <div className=\"lead\">\n            I also enjoy following professional sports (especially NBA, NFL, and MLB), building various objects (custom PC, wood table), and gaming (lately big on The Witcher 3).\n          </div>\n          <div className=\"lead\">\n            This website is somewhat a WIP, so there will be some changes and things moved around. Welcome to my personal website!\n          </div>\n        </Container>\n      </Jumbotron>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport './Projects.css';\nimport {\n  Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button\n} from 'reactstrap';\n\nclass Projects extends Component {\n  render() {\n    return (\n      <div className='card-collection'>\n        <Card className='leftmost'>\n          <CardImg top width=\"100%\" src=\"coinbase_pro_logo.png\" alt=\"Coinbase Pro Logo\" />\n          <CardBody>\n            <CardTitle>Crypto Bot</CardTitle>\n            <CardSubtitle>Simple Trading Bot built on Coinbase Pro API.</CardSubtitle>\n            <CardText>Written in Python 3.</CardText>\n            <Button>Repository is private due to profit</Button>\n          </CardBody>\n        </Card>\n        <Card>\n          <CardImg top width=\"100%\" src=\"OE.ico\" alt=\"Card image cap\" />\n          <CardBody>\n          <CardTitle>This website</CardTitle>\n            <CardSubtitle>Written in ReactJS</CardSubtitle>\n            <Button target='_blank' href='https://github.com/osaesm/osaesm.github.io'>Repository</Button>\n          </CardBody>\n        </Card>\n        <Card className='rightmost'>\n          <CardImg top width=\"100%\" src=\"rubiks_cube.jpg\" alt=\"Card image cap\" />\n          <CardBody>\n          <CardTitle>Old Rubik's Cube Solver</CardTitle>\n            <CardSubtitle>My attempt at Rubik's Cube solving with no C++, threading, or data structures knowledge.</CardSubtitle>\n            <CardText>Later I used CUDA and cleaned things up.</CardText>\n            <Button target='_blank' href='https://github.com/osaesm/Rubik'>Repository</Button>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from 'react'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport './Routes.css'\nimport Home from './Home'\nimport Projects from './Projects'\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from 'reactstrap';\n\nclass Routes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  render() {\n    return (\n      <Router>\n        <div>\n          <Navbar color=\"dark\" dark expand=\"md\">\n            <NavbarBrand href=\"/\">Osama Esmail</NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink href='Resume.pdf'>Resume</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href='#/projects/'>Projects</NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Navbar>\n          <Route exact path='/' component={Home} />\n          <Route path='/projects' component={Projects} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default Routes;\n","import React, { Component } from 'react'\nimport Routes from './Routes';\nimport './Website.css';\n\nclass Website extends Component {\n  render() {\n    const email = 'osamabinesmail@gmail.com'\n    const phoneNumber = '(847) 834-1796'\n    const mailingAddress = '410 E Green St, Apt 514, Champaign, IL 61820'\n    return (\n      <div>\n        <div className='body'>\n          <Routes />\n        </div>\n        <div className='footer'>\n          <div className='first-line'>\n            <strong>Email: </strong><a href={`mailto:${email}`}>{email}</a>\n            <strong> | Phone: </strong><a href='tel:+18478341796'>{phoneNumber}</a>\n            <strong> | Mailing Address: </strong><a href='https://goo.gl/maps/9orw4vZDeFx' target='_blank' rel=\"noopener noreferrer\" >{mailingAddress}</a>\n          </div>\n          <div className='second-line'>\n            <strong>LinkedIn: </strong><a href={'https://www.linkedin.com/in/osamabinesmail/'} target='_blank' rel=\"noopener noreferrer\" >/in/osamabinesmail</a>\n            <strong> | GitHub: </strong><a href={'http://github.com/osaesm'} target='_blank' rel=\"noopener noreferrer\" >/osaesm</a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Website;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Website from './Website';\n\nReactDOM.render(<Website />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}